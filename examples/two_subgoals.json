{"tactics":
 [{"usedConstants":
   ["Dvd.dvd",
    "HMul.hMul",
    "instMulNat",
    "instOfNatNat",
    "Nat.instDvd",
    "Nat",
    "OfNat.ofNat",
    "instHMul"],
   "tactic": "rcases h with ⟨k, hk⟩",
   "proofState": 0,
   "pos": {"line": 4, "column": 2},
   "goals": "n : Nat\nh : 2 ∣ n * n\n⊢ 2 ∣ n",
   "endPos": {"line": 4, "column": 23}},
  {"usedConstants":
   ["Eq.mpr",
    "Dvd.dvd",
    "congrArg",
    "id",
    "Nat.instMod",
    "instHMod",
    "instOfNatNat",
    "HMod.hMod",
    "Nat.instDvd",
    "Nat.dvd_iff_mod_eq_zero",
    "Nat",
    "propext",
    "OfNat.ofNat",
    "Eq"],
   "tactic": "rw [Nat.dvd_iff_mod_eq_zero]",
   "proofState": 1,
   "pos": {"line": 5, "column": 2},
   "goals": "n k : Nat\nhk : n * n = 2 * k\n⊢ 2 ∣ n",
   "endPos": {"line": 5, "column": 30}},
  {"usedConstants":
   ["Nat.mod_two_eq_zero_or_one",
    "Nat.instMod",
    "instHMod",
    "instOfNatNat",
    "HMod.hMod",
    "Nat",
    "Or",
    "OfNat.ofNat",
    "Eq"],
   "tactic":
   "cases Nat.mod_two_eq_zero_or_one n with\n| inl h0 => exact h0\n| inr h1 =>\n  have hk' : n * n % 2 = 1 := by rw [Nat.mul_mod, h1]\n  rw [hk, Nat.mul_mod, Nat.mod_self, Nat.zero_mul, Nat.zero_mod] at hk'\n  contradiction",
   "proofState": 2,
   "pos": {"line": 6, "column": 2},
   "goals": "n k : Nat\nhk : n * n = 2 * k\n⊢ n % 2 = 0",
   "endPos": {"line": 11, "column": 17}},
  {"usedConstants": [],
   "tactic": "exact h0",
   "proofState": 3,
   "pos": {"line": 7, "column": 14},
   "goals":
   "case inl\nn k : Nat\nhk : n * n = 2 * k\nh0 : n % 2 = 0\n⊢ n % 2 = 0",
   "endPos": {"line": 7, "column": 22}},
  {"usedConstants":
   ["Eq.mpr",
    "HMul.hMul",
    "congrArg",
    "Nat.mul_mod",
    "id",
    "Nat.instMod",
    "instHMod",
    "instMulNat",
    "instOfNatNat",
    "HMod.hMod",
    "Nat",
    "Eq.refl",
    "OfNat.ofNat",
    "Eq",
    "instHMul"],
   "tactic": "have hk' : n * n % 2 = 1 := by rw [Nat.mul_mod, h1]",
   "proofState": 4,
   "pos": {"line": 9, "column": 4},
   "goals":
   "case inr\nn k : Nat\nhk : n * n = 2 * k\nh1 : n % 2 = 1\n⊢ n % 2 = 0",
   "endPos": {"line": 9, "column": 55}},
  {"usedConstants":
   ["Eq.mpr",
    "HMul.hMul",
    "congrArg",
    "Nat.mul_mod",
    "id",
    "Nat.instMod",
    "instHMod",
    "instMulNat",
    "instOfNatNat",
    "HMod.hMod",
    "Nat",
    "Eq.refl",
    "OfNat.ofNat",
    "Eq",
    "instHMul"],
   "tactic": "rw [Nat.mul_mod, h1]",
   "proofState": 5,
   "pos": {"line": 9, "column": 35},
   "goals": "n k : Nat\nhk : n * n = 2 * k\nh1 : n % 2 = 1\n⊢ n * n % 2 = 1",
   "endPos": {"line": 9, "column": 55}},
  {"usedConstants":
   ["HMul.hMul",
    "congrArg",
    "Eq.mp",
    "Nat.instMod",
    "instHMod",
    "instMulNat",
    "instOfNatNat",
    "HMod.hMod",
    "Nat",
    "OfNat.ofNat",
    "Eq",
    "instHMul"],
   "tactic":
   "rw [hk, Nat.mul_mod, Nat.mod_self, Nat.zero_mul, Nat.zero_mod] at hk'",
   "proofState": 6,
   "pos": {"line": 10, "column": 4},
   "goals":
   "case inr\nn k : Nat\nhk : n * n = 2 * k\nh1 : n % 2 = 1\nhk' : n * n % 2 = 1\n⊢ n % 2 = 0",
   "endPos": {"line": 10, "column": 73}},
  {"usedConstants":
   ["False.elim",
    "noConfusion_of_Nat",
    "Nat.instMod",
    "instHMod",
    "instOfNatNat",
    "HMod.hMod",
    "Nat",
    "Nat.ctorIdx",
    "OfNat.ofNat",
    "Eq"],
   "tactic": "contradiction",
   "proofState": 7,
   "pos": {"line": 11, "column": 4},
   "goals":
   "case inr\nn k : Nat\nhk : n * n = 2 * k\nh1 : n % 2 = 1\nhk' : 0 = 1\n⊢ n % 2 = 0",
   "endPos": {"line": 11, "column": 17}},
  {"usedConstants": ["relatively_prime"],
   "tactic": "intro hrel",
   "proofState": 8,
   "pos": {"line": 14, "column": 2},
   "goals": "a b : Nat\nha : 2 ∣ a\nhb : 2 ∣ b\n⊢ ¬relatively_prime a b",
   "endPos": {"line": 14, "column": 12}},
  {"usedConstants":
   ["Dvd.dvd",
    "congrArg",
    "relatively_prime.eq_1",
    "Eq.mp",
    "instOfNatNat",
    "Nat.instDvd",
    "Nat",
    "OfNat.ofNat",
    "Eq",
    "relatively_prime"],
   "tactic": "rw [relatively_prime] at hrel",
   "proofState": 9,
   "pos": {"line": 15, "column": 2},
   "goals":
   "a b : Nat\nha : 2 ∣ a\nhb : 2 ∣ b\nhrel : relatively_prime a b\n⊢ False",
   "endPos": {"line": 15, "column": 31}},
  {"usedConstants": ["instOfNatNat", "Nat", "OfNat.ofNat", "Eq"],
   "tactic": "let hcontra := hrel 2 ha hb",
   "proofState": 10,
   "pos": {"line": 16, "column": 2},
   "goals":
   "a b : Nat\nha : 2 ∣ a\nhb : 2 ∣ b\nhrel : ∀ (n : Nat), n ∣ a → n ∣ b → n = 1\n⊢ False",
   "endPos": {"line": 16, "column": 29}},
  {"usedConstants":
   ["False",
    "instOfNatNat",
    "absurd",
    "Nat",
    "Bool",
    "Eq.refl",
    "instDecidableEqNat",
    "OfNat.ofNat",
    "Decidable.decide",
    "Eq",
    "of_decide_eq_false"],
   "tactic": "contradiction",
   "proofState": 11,
   "pos": {"line": 17, "column": 2},
   "goals":
   "a b : Nat\nha : 2 ∣ a\nhb : 2 ∣ b\nhrel : ∀ (n : Nat), n ∣ a → n ∣ b → n = 1\nhcontra : 2 = 1 := hrel 2 ha hb\n⊢ False",
   "endPos": {"line": 17, "column": 15}},
  {"usedConstants":
   ["HMul.hMul",
    "Exists",
    "Ne",
    "instMulNat",
    "instOfNatNat",
    "And",
    "Nat",
    "OfNat.ofNat",
    "Eq",
    "relatively_prime",
    "instHMul"],
   "tactic": "rintro ⟨a, b, hab, hb0, hrel⟩",
   "proofState": 12,
   "pos": {"line": 21, "column": 2},
   "goals": "⊢ ¬∃ a b, a * a = 2 * b * b ∧ b ≠ 0 ∧ relatively_prime a b",
   "endPos": {"line": 21, "column": 31}},
  {"usedConstants":
   ["Eq.mpr",
    "Dvd.dvd",
    "HMul.hMul",
    "congrArg",
    "id",
    "instMulNat",
    "instOfNatNat",
    "Nat.mul_assoc",
    "Nat.instDvd",
    "Nat",
    "Nat.dvd_mul_right",
    "OfNat.ofNat",
    "Eq",
    "instHMul"],
   "tactic":
   "have ha_sq : 2 ∣ a * a := by\n  rw [hab, Nat.mul_assoc]\n  apply Nat.dvd_mul_right 2 (b * b)",
   "proofState": 13,
   "pos": {"line": 22, "column": 2},
   "goals":
   "a b : Nat\nhab : a * a = 2 * b * b\nhb0 : b ≠ 0\nhrel : relatively_prime a b\n⊢ False",
   "endPos": {"line": 24, "column": 37}},
  {"usedConstants":
   ["Eq.mpr",
    "Dvd.dvd",
    "HMul.hMul",
    "congrArg",
    "id",
    "instMulNat",
    "instOfNatNat",
    "Nat.mul_assoc",
    "Nat.instDvd",
    "Nat",
    "OfNat.ofNat",
    "Eq",
    "instHMul"],
   "tactic": "rw [hab, Nat.mul_assoc]",
   "proofState": 14,
   "pos": {"line": 23, "column": 4},
   "goals":
   "a b : Nat\nhab : a * a = 2 * b * b\nhb0 : b ≠ 0\nhrel : relatively_prime a b\n⊢ 2 ∣ a * a",
   "endPos": {"line": 23, "column": 27}},
  {"usedConstants":
   ["HMul.hMul",
    "instMulNat",
    "instOfNatNat",
    "Nat",
    "Nat.dvd_mul_right",
    "OfNat.ofNat",
    "instHMul"],
   "tactic": "apply Nat.dvd_mul_right 2 (b * b)",
   "proofState": 15,
   "pos": {"line": 24, "column": 4},
   "goals":
   "a b : Nat\nhab : a * a = 2 * b * b\nhb0 : b ≠ 0\nhrel : relatively_prime a b\n⊢ 2 ∣ 2 * (b * b)",
   "endPos": {"line": 24, "column": 37}},
  {"usedConstants":
   ["Dvd.dvd",
    "squared_even_implies_even",
    "instOfNatNat",
    "Nat.instDvd",
    "Nat",
    "OfNat.ofNat"],
   "tactic": "have ha : 2 ∣ a := squared_even_implies_even ha_sq",
   "proofState": 16,
   "pos": {"line": 25, "column": 2},
   "goals":
   "a b : Nat\nhab : a * a = 2 * b * b\nhb0 : b ≠ 0\nhrel : relatively_prime a b\nha_sq : 2 ∣ a * a\n⊢ False",
   "endPos": {"line": 25, "column": 52}},
  {"usedConstants":
   ["Dvd.dvd", "instOfNatNat", "Nat.instDvd", "Nat", "OfNat.ofNat"],
   "tactic": "let ha' := ha",
   "proofState": 17,
   "pos": {"line": 26, "column": 2},
   "goals":
   "a b : Nat\nhab : a * a = 2 * b * b\nhb0 : b ≠ 0\nhrel : relatively_prime a b\nha_sq : 2 ∣ a * a\nha : 2 ∣ a\n⊢ False",
   "endPos": {"line": 26, "column": 15}},
  {"usedConstants":
   ["Dvd.dvd", "instOfNatNat", "Nat.instDvd", "Nat", "OfNat.ofNat"],
   "tactic": "rcases ha' with ⟨k, hk⟩",
   "proofState": 18,
   "pos": {"line": 27, "column": 2},
   "goals":
   "a b : Nat\nhab : a * a = 2 * b * b\nhb0 : b ≠ 0\nhrel : relatively_prime a b\nha_sq : 2 ∣ a * a\nha : 2 ∣ a\nha' : 2 ∣ a := ha\n⊢ False",
   "endPos": {"line": 27, "column": 25}},
  {"usedConstants":
   ["Nat.zero_lt_succ._simp_1",
    "instOfNatNat",
    "Nat",
    "LT.lt",
    "of_eq_true",
    "instLTNat",
    "OfNat.ofNat",
    "Nat.succ"],
   "tactic": "have htwo_pos : 0 < 2 := by simp",
   "proofState": 19,
   "pos": {"line": 28, "column": 2},
   "goals":
   "a b : Nat\nhab : a * a = 2 * b * b\nhb0 : b ≠ 0\nhrel : relatively_prime a b\nha_sq : 2 ∣ a * a\nha : 2 ∣ a\nk : Nat\nhk : a = 2 * k\n⊢ False",
   "endPos": {"line": 28, "column": 33}},
  {"usedConstants":
   ["Nat.zero_lt_succ._simp_1",
    "instOfNatNat",
    "Nat",
    "LT.lt",
    "of_eq_true",
    "instLTNat",
    "OfNat.ofNat",
    "Nat.succ"],
   "tactic": "simp",
   "proofState": 20,
   "pos": {"line": 28, "column": 29},
   "goals":
   "a b : Nat\nhab : a * a = 2 * b * b\nhb0 : b ≠ 0\nhrel : relatively_prime a b\nha_sq : 2 ∣ a * a\nha : 2 ∣ a\nk : Nat\nhk : a = 2 * k\n⊢ 0 < 2",
   "endPos": {"line": 28, "column": 33}},
  {"usedConstants":
   ["HMul.hMul",
    "congrArg",
    "Eq.mp",
    "instMulNat",
    "instOfNatNat",
    "Nat",
    "OfNat.ofNat",
    "Eq",
    "instHMul"],
   "tactic":
   "have hk_sq : 2 * k * k = b * b := by\n  rw [hk] at hab\n  rw [Nat.mul_assoc, Nat.mul_comm k (2 * k), Nat.mul_assoc 2 b b] at hab\n  apply Nat.mul_left_cancel htwo_pos hab",
   "proofState": 21,
   "pos": {"line": 29, "column": 2},
   "goals":
   "a b : Nat\nhab : a * a = 2 * b * b\nhb0 : b ≠ 0\nhrel : relatively_prime a b\nha_sq : 2 ∣ a * a\nha : 2 ∣ a\nk : Nat\nhk : a = 2 * k\nhtwo_pos : 0 < 2\n⊢ False",
   "endPos": {"line": 32, "column": 42}},
  {"usedConstants":
   ["HMul.hMul",
    "congrArg",
    "Eq.mp",
    "instMulNat",
    "instOfNatNat",
    "Nat",
    "OfNat.ofNat",
    "Eq",
    "instHMul"],
   "tactic": "rw [hk] at hab",
   "proofState": 22,
   "pos": {"line": 30, "column": 4},
   "goals":
   "a b : Nat\nhab : a * a = 2 * b * b\nhb0 : b ≠ 0\nhrel : relatively_prime a b\nha_sq : 2 ∣ a * a\nha : 2 ∣ a\nk : Nat\nhk : a = 2 * k\nhtwo_pos : 0 < 2\n⊢ 2 * k * k = b * b",
   "endPos": {"line": 30, "column": 18}},
  {"usedConstants":
   ["HMul.hMul",
    "congrArg",
    "Eq.mp",
    "instMulNat",
    "instOfNatNat",
    "Nat.mul_assoc",
    "Nat",
    "OfNat.ofNat",
    "Eq",
    "instHMul"],
   "tactic":
   "rw [Nat.mul_assoc, Nat.mul_comm k (2 * k), Nat.mul_assoc 2 b b] at hab",
   "proofState": 23,
   "pos": {"line": 31, "column": 4},
   "goals":
   "a b : Nat\nhb0 : b ≠ 0\nhrel : relatively_prime a b\nha_sq : 2 ∣ a * a\nha : 2 ∣ a\nk : Nat\nhab : 2 * k * (2 * k) = 2 * b * b\nhk : a = 2 * k\nhtwo_pos : 0 < 2\n⊢ 2 * k * k = b * b",
   "endPos": {"line": 31, "column": 74}},
  {"usedConstants":
   ["HMul.hMul",
    "Nat.mul_left_cancel",
    "instMulNat",
    "instOfNatNat",
    "Nat",
    "OfNat.ofNat",
    "instHMul"],
   "tactic": "apply Nat.mul_left_cancel htwo_pos hab",
   "proofState": 24,
   "pos": {"line": 32, "column": 4},
   "goals":
   "a b : Nat\nhb0 : b ≠ 0\nhrel : relatively_prime a b\nha_sq : 2 ∣ a * a\nha : 2 ∣ a\nk : Nat\nhab : 2 * (2 * k * k) = 2 * (b * b)\nhk : a = 2 * k\nhtwo_pos : 0 < 2\n⊢ 2 * k * k = b * b",
   "endPos": {"line": 32, "column": 42}},
  {"usedConstants":
   ["Eq.mpr",
    "Dvd.dvd",
    "HMul.hMul",
    "congrArg",
    "id",
    "instMulNat",
    "instOfNatNat",
    "Nat.mul_assoc",
    "Nat.instDvd",
    "Nat",
    "Nat.dvd_mul_right",
    "OfNat.ofNat",
    "Eq.symm",
    "Eq",
    "instHMul"],
   "tactic":
   "have hb_sq : 2 ∣ b * b := by\n  rw [← hk_sq, Nat.mul_assoc]\n  apply Nat.dvd_mul_right 2 (k * k)",
   "proofState": 25,
   "pos": {"line": 33, "column": 2},
   "goals":
   "a b : Nat\nhab : a * a = 2 * b * b\nhb0 : b ≠ 0\nhrel : relatively_prime a b\nha_sq : 2 ∣ a * a\nha : 2 ∣ a\nk : Nat\nhk : a = 2 * k\nhtwo_pos : 0 < 2\nhk_sq : 2 * k * k = b * b\n⊢ False",
   "endPos": {"line": 35, "column": 37}},
  {"usedConstants":
   ["Eq.mpr",
    "Dvd.dvd",
    "HMul.hMul",
    "congrArg",
    "id",
    "instMulNat",
    "instOfNatNat",
    "Nat.mul_assoc",
    "Nat.instDvd",
    "Nat",
    "OfNat.ofNat",
    "Eq.symm",
    "Eq",
    "instHMul"],
   "tactic": "rw [← hk_sq, Nat.mul_assoc]",
   "proofState": 26,
   "pos": {"line": 34, "column": 4},
   "goals":
   "a b : Nat\nhab : a * a = 2 * b * b\nhb0 : b ≠ 0\nhrel : relatively_prime a b\nha_sq : 2 ∣ a * a\nha : 2 ∣ a\nk : Nat\nhk : a = 2 * k\nhtwo_pos : 0 < 2\nhk_sq : 2 * k * k = b * b\n⊢ 2 ∣ b * b",
   "endPos": {"line": 34, "column": 31}},
  {"usedConstants":
   ["HMul.hMul",
    "instMulNat",
    "instOfNatNat",
    "Nat",
    "Nat.dvd_mul_right",
    "OfNat.ofNat",
    "instHMul"],
   "tactic": "apply Nat.dvd_mul_right 2 (k * k)",
   "proofState": 27,
   "pos": {"line": 35, "column": 4},
   "goals":
   "a b : Nat\nhab : a * a = 2 * b * b\nhb0 : b ≠ 0\nhrel : relatively_prime a b\nha_sq : 2 ∣ a * a\nha : 2 ∣ a\nk : Nat\nhk : a = 2 * k\nhtwo_pos : 0 < 2\nhk_sq : 2 * k * k = b * b\n⊢ 2 ∣ 2 * (k * k)",
   "endPos": {"line": 35, "column": 37}},
  {"usedConstants":
   ["Dvd.dvd",
    "squared_even_implies_even",
    "instOfNatNat",
    "Nat.instDvd",
    "Nat",
    "OfNat.ofNat"],
   "tactic": "have hb : 2 ∣ b := squared_even_implies_even hb_sq",
   "proofState": 28,
   "pos": {"line": 36, "column": 2},
   "goals":
   "a b : Nat\nhab : a * a = 2 * b * b\nhb0 : b ≠ 0\nhrel : relatively_prime a b\nha_sq : 2 ∣ a * a\nha : 2 ∣ a\nk : Nat\nhk : a = 2 * k\nhtwo_pos : 0 < 2\nhk_sq : 2 * k * k = b * b\nhb_sq : 2 ∣ b * b\n⊢ False",
   "endPos": {"line": 36, "column": 52}},
  {"usedConstants":
   ["not_relative_prime_if_both_even", "Not", "relatively_prime"],
   "tactic": "have hrel_contra := not_relative_prime_if_both_even ha hb",
   "proofState": 29,
   "pos": {"line": 37, "column": 2},
   "goals":
   "a b : Nat\nhab : a * a = 2 * b * b\nhb0 : b ≠ 0\nhrel : relatively_prime a b\nha_sq : 2 ∣ a * a\nha : 2 ∣ a\nk : Nat\nhk : a = 2 * k\nhtwo_pos : 0 < 2\nhk_sq : 2 * k * k = b * b\nhb_sq : 2 ∣ b * b\nhb : 2 ∣ b\n⊢ False",
   "endPos": {"line": 37, "column": 59}},
  {"usedConstants": ["False", "False.elim"],
   "tactic": "contradiction",
   "proofState": 30,
   "pos": {"line": 38, "column": 2},
   "goals":
   "a b : Nat\nhab : a * a = 2 * b * b\nhb0 : b ≠ 0\nhrel : relatively_prime a b\nha_sq : 2 ∣ a * a\nha : 2 ∣ a\nk : Nat\nhk : a = 2 * k\nhtwo_pos : 0 < 2\nhk_sq : 2 * k * k = b * b\nhb_sq : 2 ∣ b * b\nhb : 2 ∣ b\nhrel_contra : ¬relatively_prime a b\n⊢ False",
   "endPos": {"line": 38, "column": 15}}],
 "env": 0}

